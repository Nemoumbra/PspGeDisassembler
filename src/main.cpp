#include <iostream>

#include "GPU_Disasm.h"
#include <vector>

void run_tests() {
    GPU_Disasm disasm;

    const std::vector<uint8_t> data = {
            0xC0, 0x3D, 0xAF, 0x08, 0x01, 0x00, 0x00, 0xD2, 0x00, 0x02, 0x00, 0x9D, 0x00, 0x40, 0x04, 0x9C,
            0x00, 0x00, 0x00, 0xD4, 0xDF, 0x3D, 0x04, 0xD5, 0x00, 0x00, 0x00, 0x15, 0xDF, 0x3D, 0x04, 0x16,
            0x00, 0x00, 0x00, 0xD4, 0xDF, 0x3D, 0x04, 0xD5, 0x00, 0x00, 0x00, 0x15, 0xDF, 0x3D, 0x04, 0x16,
            0x00, 0x70, 0x43, 0x42
    };

    auto vector_test = disasm.DisassembleOpcodeRange(data);

    auto example = vector_test[0].desc;

    u32 opcode_data = 0x08'af'3d'c0;
    auto opcode_test = disasm.DisassembleOpcode(opcode_data, 0);
    if (opcode_test.desc != example) {
        std::cout << "Mismatch!\n";
    } else {
        std::cout << "Correct! It's " << example << "\n";
    }

    std::cout << "Done!\n";
}

int main() {

    run_tests();
    return 0;
}
